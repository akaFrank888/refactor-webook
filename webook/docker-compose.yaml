version: "3"
# 有几个服务组成 docker compose
services:
  mysql8:
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      # 初始化脚本【在本目录下的script文件夹下】
      - ./script/mysql/:/docker-entrypoint-initdb.d/
    ports:
      # 外部访问用 13316
      - 13316:3306
  redis:
    image: "bitnami/redis:latest"
    restart: always
    environment:
      # 无需密码就能连接redis
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
  mongo:
    image: mongo:6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017


  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      # 允许自动创建 topic，线上环境不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      # 将本地的 prometheus 文件映射到容器内的配置文件
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      # 访问数据的端口
      - 9090:9090
